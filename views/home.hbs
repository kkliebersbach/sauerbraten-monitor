<!--
   sauerbraten-monitor, a web monitor for a Sauerbraten server,
   built with Polymer and Node.js.
   Copyright (C) 2016  Kevin Boxhoorn

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<iron-location url-space-regex="^\/(chat|clients|stats)$"></iron-location>

<paper-material elevation="1">
	<paper-toolbar id="page-header" class="medium-tall">
		<iron-icon icon="site:icon"></iron-icon>
		<h1 id="page-title">{{serverName}}</h1>
		<paper-menu-button horizontal-align="right" ignore-select>
			<paper-icon-button icon="more-vert" class="dropdown-trigger"></paper-icon-button>
			<paper-menu class="dropdown-content">
				<a class="no-style" href="/about">
					<paper-item>
						About
					</paper-item>
				</a>
				<a class="no-style" href="https://github.com/wincinderith/sauerbraten-monitor" target="_blank">
					<paper-item>
						GitHub
					</paper-item>
				</a>
			</paper-menu>
		</paper-menu-button>
		<paper-tabs id="page-tabs" class="middle fit">
			<paper-tab>Chat</paper-tab>
			<paper-tab>Clients</paper-tab>
			<paper-tab>Stats</paper-tab>
		</paper-tabs>
	</paper-toolbar>
</paper-material>

<neon-animated-pages id="page-animator" class="flex">
	<chat-page></chat-page>
	<clients-page></clients-page>
	<stats-page></stats-page>
</neon-animated-pages>

<script>
	let chatPage = document.querySelector("chat-page");
	let clientsPage = document.querySelector("clients-page");
	let statsPage = document.querySelector("stats-page");

	window.addEventListener("WebComponentsReady", () => {
		let socket = io();
		socket.on("server start", () => {
			console.log("server start");
		});
		socket.on("server master", () => {
			console.log("server master");
		});
		socket.on("clients update", (data) => {
			console.log("clients update", data.clients);
			clientsPage.set("clients", data.clients);
		});
		socket.on("client add", (data) => {
			console.log("client add", data.client);
			clientsPage.push("clients", data.client);
		});
		socket.on("client remove", (data) => {
			console.log("client remove", data.clientIndex);
			clientsPage.splice("clients", data.clientIndex, 1);
		});
		socket.on("stats update", (data) => {
			console.log("stats update", data.stats);
			statsPage.set("stats", data.stats);
			statsPage.updateChart();
		});
		socket.on("stat add", (data) => {
			console.log("stat add", data.stat);
			statsPage.push("stats", data.stat);
		});
		socket.on("stat overflow", () => {
			console.log("stat overflow");
			statsPage.shift("stats");
		});
		socket.on("chat update", (data) => {
			console.log("chat update", data.chat);
			chatPage.set("chat", data.chat);
		});
		socket.on("chat add", (data) => {
			console.log("chat add", data.message);
			chatPage.push("chat", data.message);
		});
		socket.on("chat overflow", () => {
			console.log("chat overflow");
			chatPage.shift("chat");
		});

		chatPage.update();
		clientsPage.update();
		statsPage.updateChart();
	});
	
	let pageUrl = document.querySelector("iron-location");
	let pageTabs = document.querySelector("#page-tabs");
	let pageAnimator = document.querySelector("#page-animator");
	let pathChanged = () => {
		switch (pageUrl.path) {
			case "/chat":
				pageTabs.select(0);
				break;
			case "/clients":
				pageTabs.select(1);
				break;
			case "/stats":
				pageTabs.select(2);
				break;
			default:
				pageUrl.path = "/chat";
				break;
		}
	};
	pageUrl.addEventListener("path-changed", pathChanged);
	pageTabs.addEventListener("iron-select", (event) => {
		if (pageTabs.selected > pageAnimator.selected) {
			pageAnimator.exitAnimation = "slide-left-animation";
			pageAnimator.entryAnimation = "slide-from-right-animation";
		} else if (pageTabs.selected < pageAnimator.selected) {
			pageAnimator.exitAnimation = "slide-right-animation";
			pageAnimator.entryAnimation = "slide-from-left-animation";
		}
		pageAnimator.select(pageTabs.selected);
	});
	pageAnimator.addEventListener("iron-select", () => {
		switch (pageAnimator.selected) {
			case 0:
				pageUrl.path = "/chat";
				break;
			case 1:
				pageUrl.path = "/clients";
				break;
			case 2:
				pageUrl.path = "/stats";
				break;
			default:
				pageAnimator.select(0);
				break;
		}
	});
	window.addEventListener("WebComponentsReady", pathChanged);
</script>
